#!/bin/sh
#
#  This script places the new systems hostname into a couple of files within
# the new image.
#
# Steve
# --
# http://www.steve.org.uk/



prefix=$1


#
#  Source our common functions
#
if [ -e /usr/share/xen-tools/common.sh ]; then
    . /usr/share/xen-tools/common.sh
else
    . ./hooks/common.sh
fi


#
# Log our start
#
logMessage Script $0 starting


#
#  We need to split up the hostname into name + domain
# do this by looking for a dot.
name=$(echo "$hostname" | sed -e 's/\..*$//')
domain=$(echo "$hostname" | sed -e 's/^[^.]*\.//')


#
#  Make sure the umask is correct
#
umask 022


#
#  Setup the hostname + domain names.
#
echo HOSTNAME=\"${name}\" >> ${prefix}/etc/conf.d/hostname
echo DNSDOMAIN=\"${domain}\" >> ${prefix}/etc/conf.d/domainname


#
#  Fixup the /etc/hosts file upon the new image for
# machines with static IPs
#
if [ -z "${dhcp}" ]; then

    # Non-IPv6 stuff.
    grep -v '\(::\|IPv6\)' /etc/hosts > ${prefix}/etc/hosts

    # New entry.
    echo "${ip1}    ${hostname}" >> ${prefix}/etc/hosts
    echo " " >> ${prefix}/etc/hosts

    # IPv6 stuff.
    grep '\(::\|IPv6\)' /etc/hosts >> ${prefix}/etc/hosts

else

    #
    #  Stub /etc/hosts for DHCP clients.
    #
    cat >> ${prefix}/etc/hosts <<EOF
127.0.0.1       localhost

# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
ff02::3 ip6-allhosts

EOF


fi


#
#  Allow the host system to know the IP address of our new guest.
#
if [ -z "${dhcp}" ]; then

    if ( grep ${hostname} /etc/hosts > /dev/null ) ; then

        logMessage Host already has IP address for the host ${hostname}.

    else

        #
        #  Short host name.
        #
        name=`echo ${hostname} | awk -F. '{print $1}'`

        if [ -z "${nohosts}" ]; then

            logMessage Adding ${hostname} and ${name} to /etc/hosts on the host
            echo "${ip1}    ${hostname}    ${name}" >> /etc/hosts

            #
            #  If we've updated the /etc/hosts file on the host machine
            # and there is an installation of dnsmasq installed then
            # reload it.
            #
            #  This will let the local LAN clients lookup the new address.
            #
            if [ -x /usr/sbin/dnsmasq ] ; then
                if [ -e /var/run/dnsmasq.pid ]; then

                    logMessage Allowing DNSMasq to restart.
                    kill -s HUP `cat /var/run/dnsmasq.pid`
                fi
            fi
        fi
    fi
fi


#
#  Log our finish
#
logMessage Script $0 finished
